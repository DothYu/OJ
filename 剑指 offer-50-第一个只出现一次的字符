题目描述
在一个字符串(0<=字符串长度<=10000，全部由字母组成)中找到第一个只出现一次的字符,并返回它的位置, 如果没有则返回 -1（需要区分大小写）.


==========================
import java.util.*;
public class Solution {
    public int FirstNotRepeatingChar(String str) {
        if (str == null || str.length() == 0) {
            return -1;
        }
        Map<Character, Integer> map = new HashMap<>();
        for (int i = 0; i < str.length(); i ++) {
            char c = str.charAt(i);
            if (map.containsKey(c)) {
                map.put(c, -1);
            } else {
                map.put(c, i);
            }
        }
        int min = Integer.MAX_VALUE;
        if (map.isEmpty()) {
            return -1;
        } else {
            for (Map.Entry<Character, Integer> entry: map.entrySet()) {
                if (entry.getValue() == -1) {
                    continue;
                }
                min = Math.min(entry.getValue(), min);
            }
            return min;
        }
    }
}

====================================
import java.util.*;
public class Solution {
    public int FirstNotRepeatingChar(String str) {
        if (str == null || str.length() == 0) {
            return -1;
        }
        int[] dict = new int[58];
        for (int i = 0; i < str.length(); i ++) {
            char c = str.charAt(i);
            dict[(int)c - 65] ++;
        }
        for (int i = 0; i < str.length(); i ++) {
            char c = str.charAt(i);
            if (dict[(int)c - 65] == 1) {
                return i;
            }
        }
        return -1;
    }
}
