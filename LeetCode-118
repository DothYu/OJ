[Easy]
118. Pascal's Triangle

Given a non-negative integer numRows, generate the first numRows of Pascal's triangle.
Example:

Input: 5
Output:
[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]


============================================================================================

class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        if (numRows == 0)   return result;
        // 第一行第一列永远为1
        result.add(new ArrayList<Integer>());
        result.get(0).add(1);
        
        for (int i = 1; i < numRows; i ++) {
            List<Integer> row = new ArrayList<>();
            List<Integer> prevRow = result.get(i - 1);
            // 第一列永远为1
            row.add(1);
            // 除第一列、最后一列外，其余的列等于上一行中，左边与右边相加
            for (int j = 1; j < i; j ++) {
                row.add(prevRow.get(j - 1) + prevRow.get(j));
            }
            // 最后一列永远为1
            row.add(1);
            // 将子数组加入到result数组中
            result.add(row);
        }
        return result;
    }
}
