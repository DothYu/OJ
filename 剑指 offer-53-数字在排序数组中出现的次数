题目描述
统计一个数字在排序数组中出现的次数。


======================
public class Solution {
    public int GetNumberOfK(int [] array , int k) {
        if (array.length == 0) {
            return 0;
        }
        int count = 0;
        int first = findFirst(array, k, 0, array.length - 1);
        int last = findLast(array, k, 0, array.length - 1);
        if (first > - 1 && last > - 1) {
            count = last - first + 1;
        }
        return count;
    }
    private int findFirst(int[] array, int k, int left, int right) {
        if (left > right) {
            return -1;
        }
        int mid = left + (right - left) / 2;
        if (array[mid] > k) {
            return findFirst(array, k, left, mid - 1);
        } else if (array[mid] < k) {
            return findFirst(array, k, mid + 1, right);
        } else if (mid - 1 >= 0 && array[mid -1] == k) {
            return findFirst(array, k, left, mid - 1);
        } else {
            return mid;
        }
    }
    private int findLast(int[] array, int k, int left, int right) {
        if (left > right) {
            return -1;
        }
        while (left <= right) {
            int mid = left + (right - left) / 2;
            if (array[mid] > k) {
                right = mid - 1;
            } else if (array[mid] < k) {
                left = mid + 1;
            } else if (mid + 1 <= array.length - 1 && array[mid + 1] == k) {
                left = mid + 1;
            } else {
                return mid;
            }
        }
        return -1;
    }
}

