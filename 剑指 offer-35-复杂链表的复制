题目描述
输入一个复杂链表（每个节点中有节点值，以及两个指针，一个指向下一个节点，另一个特殊指针指向任意一个节点），返回结果为复制后复杂链表的head。
（注意，输出结果中请不要返回参数中的节点引用，否则判题程序会直接返回空）




===========
/*
public class RandomListNode {
    int label;
    RandomListNode next = null;
    RandomListNode random = null;

    RandomListNode(int label) {
        this.label = label;
    }
}
*/
public class Solution {
    public RandomListNode Clone(RandomListNode head) {
        if (head == null) {
            return null;
        }
        cloneNodes(head);
        connectSiblingNodes(head);
        return reconnect(head);  
    }
    private void cloneNodes(RandomListNode head) {
        RandomListNode curr = head;
        while (curr != null) {
            RandomListNode copyNode = new RandomListNode(curr.label);
            copyNode.next = curr.next;
            copyNode.random = null;
            curr.next = copyNode;
            curr = copyNode.next;
        }
    }
    private void connectSiblingNodes(RandomListNode head) {
        RandomListNode curr = head;
        while (curr != null) {
            RandomListNode copyNode = curr.next;
            if (curr.random != null) {
                copyNode.random = curr.random.next;
            }
            curr = copyNode.next;
        }
    }
    private RandomListNode reconnect(RandomListNode head) {
        RandomListNode curr = head;
        RandomListNode root = curr.next;
        while (curr != null) {
            RandomListNode copyNode = curr.next;
            curr.next = copyNode.next;
            copyNode.next = copyNode.next == null ? null : copyNode.next.next;
            curr = curr.next;
        }
        return root;
    }
}
