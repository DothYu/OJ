[Medium]
77. Combinations

Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.

Example:

Input: n = 4, k = 2
Output:
[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]



=============================
// Solution One: BackTracking

class Solution {
    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> subResult = new ArrayList<>();
        helper(result, subResult, n, k, 0, 1);
        return result;
    }
    public void helper(List<List<Integer>> result, List<Integer> subResult, int n, int k, int pos, int cur) {
        if (pos == k) {
            result.add(new ArrayList<>(subResult));
            return;
        }
        for (int i = cur; i <= n; i ++) {
            // if (subResult.contains(i))
            //     continue;
            subResult.add(i);
            helper(result, subResult, n, k, pos + 1, i + 1);
            subResult.remove(subResult.size() - 1);
        }
    }
}
