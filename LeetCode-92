[Medium]
92. Reverse Linked List II

Reverse a linked list from position m to n. Do it in one-pass.

Note: 1 ≤ m ≤ n ≤ length of list.

Example:

Input: 1->2->3->4->5->NULL, m = 2, n = 4
Output: 1->4->3->2->5->NULL


======================
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        if (head == null || head.next == null || m == n) 
            return head;
        ListNode prev = head;
        ListNode curr = head;
        ListNode orig = head;
        ListNode first = head;
        // 定位前置节点
        if (m == 1) {
            prev = null;
            orig = prev;
        }
        else {
            for (int i = 0; i < m - 2; i ++) {
                prev = prev.next;
            }
            curr = prev.next;
            orig = prev;
            first = curr;
        }
        while (n -- >= m) {
            // 反转
            ListNode nextTemp = curr.next;
            curr.next = prev;
            prev = curr;
            curr = nextTemp;
        }
        first.next = curr;
        if (m != 1)
            orig.next = prev;
        else
            head = prev;
        return head;
    }
}
