[Easy]
125. Valid Palindrome

Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.

Note: For the purpose of this problem, we define empty string as valid palindrome.

Example 1:

Input: "A man, a plan, a canal: Panama"
Output: true
Example 2:

Input: "race a car"
Output: false


==================================================================================================================

// Solution One: Time complexity: O(), Space complexity: O()

class Solution {
    public boolean isPalindrome(String s) {
        // if (s.length() == 0)    return true;
        char[] c = s.toCharArray();
        int i = 0, j = c.length - 1;
        while (i < j) {
            if (!Character.isLetterOrDigit(c[i])) {
                i ++;
                continue;
            }
            if (!Character.isLetterOrDigit(c[j])) {
                j --;
                continue;
            }
            if (Character.toLowerCase(c[i]) == Character.toLowerCase(c[j])) {
                i ++;
                j --;
            } else 
                return false;
        }
        return true;
    }
}



==================================================================================================================



// Solution Two: Time complexity: O(), Space complexity: O()

class Solution {
    public boolean isPalindrome(String s) {
        String actual = s.replaceAll("[^A-Za-z0-9]", "").toUpperCase();
        String reverse = new StringBuilder(actual).reverse().toString();
        return actual.equals(reverse);
    }
}
