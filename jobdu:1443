题目1443：Tr A
时间限制：1 秒内存限制：128 兆特殊判题：否提交：1371解决：809
题目描述：
A为一个方阵，则Tr A表示A的迹（就是主对角线上各项的和），现要求Tr(A^k)%9973。
输入：
数据的第一行是一个T，表示有T组数据。
每组数据的第一行有n(2 <= n <= 10)和k(2 <= k < 10^9)两个数据。接下来有n行，每行有n个数据，每个数据的范围是[0,9]，表示方阵A的内容。
输出：
对应每组数据，输出Tr(A^k)%9973。
样例输入：
2
2 2
1 0
0 1
3 99999999
1 2 3
4 5 6
7 8 9
样例输出：
2
2686



算法思想：定义矩阵结构体，定义矩阵相乘的运算，定义矩阵指数的运算，用二分求幂策略。



#include <cstdio>
#define N 9973

struct Matrix{
	int m[11][11];
};

int n;

Matrix mul(Matrix a, Matrix b){
	int i,j,k;
	Matrix c;
	for(int i=1; i<=n; i++){
		for(j=1; j<=n; j++){
			c.m[i][j] = 0;
			for(k=1; k<=n; k++){
				c.m[i][j] += (a.m[i][k]*b.m[k][j])%N;
			}
			c.m[i][j] %= N;
		}
	}
	return c;
}

Matrix E;

Matrix pow(Matrix a, int k){
	Matrix c = E;
	while(k){
		if(k%2 == 1)
			c = mul(c,a);
		k /= 2;
		a = mul(a,a);
	}
	return c;
}

int main(){
	int t;
	while(scanf("%d",&t)!=EOF){
		while(t--){
			int k;
			scanf("%d%d",&n,&k);
			int i,j;
			for(i=1; i<=n; i++)
				for(j=1; j<=n; j++){
					if(i == j){
						E.m[i][j]=1;
					}
					else
						E.m[i][j]=0;
				}

			Matrix tmp;
			for(i=1; i<=n; i++)
				for(j=1; j<=n; j++)
					scanf("%d",&tmp.m[i][j]);

			tmp = pow(tmp,k);
			int ans = 0;
			for(i=1; i<=n; i++)
				ans += tmp.m[i][i]%N;
			printf("%d\n",ans%N);
		}
	}
	return 0;
}
