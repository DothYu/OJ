题目描述
输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的双向链表。要求不能创建任何新的结点，只能调整树中结点指针的指向。


========================================================
/**
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;
    }
}
*/
public class Solution {
    public TreeNode Convert(TreeNode root) {
        if (root == null || (root.left == null && root.right == null)) {
            return root;
        }
        TreeNode leftTree = Convert(root.left);
        TreeNode curr = leftTree;
        while (curr != null && curr.right != null) {
            curr = curr.right;
        }
        if (leftTree != null) {
            curr.right = root;
            root.left = curr;
        }
        TreeNode rightTree = Convert(root.right);
        if (rightTree != null) {
            root.right = rightTree;
            rightTree.left = root;
        }
        return leftTree == null ? root : leftTree;
    }
        
}
========================================================
public class Solution {

    private TreeNode leftLast = null;
    public TreeNode Convert(TreeNode root) {
        if (root == null) {
            return null;
        }
        if (root.left == null && root.right == null) {
            leftLast = root;
            return root;
        }
        TreeNode leftTree = Convert(root.left);
        if (leftTree != null) {
            leftLast.right = root;
            root.left = leftLast;
        }
        leftLast = root;
        TreeNode rightTree = Convert(root.right);
        if (rightTree != null) {
            root.right = rightTree;
            rightTree.left = root;
        }
        return leftTree == null ? root : leftTree;
    }   
}
