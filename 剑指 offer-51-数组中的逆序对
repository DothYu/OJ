题目描述
在数组中的两个数字，如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。输入一个数组,求出这个数组中的逆序对的总数P。
并将P对1000000007取模的结果输出。 即输出P%1000000007

输入描述:
题目保证输入的数组中没有的相同的数字

数据范围：

	对于%50的数据,size<=10^4

	对于%75的数据,size<=10^5

	对于%100的数据,size<=2*10^5

示例1
输入
1,2,3,4,5,6,7,0

输出
7


=======================
public class Solution {
    public static final int MOD = 1000000007;
    public int count = 0;
    public int InversePairs(int [] array) {
        if (array.length == 0) {
            return 0;
        }
        splitAndMerge(array, 0, array.length - 1);
        return count;
    }
    public void splitAndMerge(int[] array, int left, int right) {
        if (left < right) {
            int mid = left + (right - left) / 2;
            splitAndMerge(array, left, mid);
            splitAndMerge(array, mid + 1, right);
            merge(array, left, mid, right);
        }
    }
    public void merge(int[] array, int left, int mid, int right) {
        int[] temp = new int[right - left + 1];
        int i = left, j = mid + 1;
        int k = 0;
        while (i <= mid && j <= right) {
           if (array[i] <= array[j]) {
               temp[k ++] = array[i ++];
           } else {
               temp[k ++] = array[j ++];
               count = (count + mid - i + 1) % MOD;
           }
        }
        while (i <= mid) {
            temp[k ++] = array[i ++];
        }
        while (j <= right) {
            temp[k ++] = array[j ++];
        }
        for (k = 0; k < temp.length; k ++) {
            array[left + k] = temp[k];
        }
    }
}
