题目描述
输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有的奇数位于数组的前半部分，所有的偶数位于数组的后半部分，
并保证奇数和奇数，偶数和偶数之间的相对位置不变。



============
////O(n),O(n)
public class Solution {
    public void reOrderArray(int [] array) {
        if (array == null || array.length == 0) {
            return;
        }
        int[] temp = new int[array.length];
        int index = 0;
        int i = 0;
        while (i < array.length) {
            while (i < array.length && array[i] % 2 == 1) {
                temp[index ++] = array[i ++];
            }
            while (i < array.length && array[i] % 2 == 0) {
                i ++;
            }
        }
        i = 0;
        while (i < array.length) {
            while (i < array.length && array[i] % 2 == 0) {
                temp[index ++] = array[i ++];
            }
            while (i < array.length && array[i] % 2 == 1) {
                i ++;
            }
        }
        System.arraycopy(temp, 0, array, 0, array.length);
    }
}
