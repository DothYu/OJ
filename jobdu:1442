题目1442：A sequence of numbers
时间限制：1 秒内存限制：128 兆特殊判题：否提交：4063解决：1035
题目描述：
Xinlv wrote some sequences on the paper a long time ago, they might be arithmetic or geometric sequences. The numbers are not very clear now, and only the first three numbers of each sequence are recognizable. Xinlv wants to know some numbers in these sequences, and he needs your help.
输入：
The first line contains an integer N, indicting that there are N sequences. Each of the following N lines contain four integers. The first three indicating the first three numbers of the sequence, and the last one is K, indicating that we want to know the K-th numbers of the sequence.
You can assume 0 < K <= 10^9, and the other three numbers are in the range [0, 2^63). All the numbers of the sequences are integers. And the sequences are non-decreasing.
输出：
Output one line for each test case, that is, the K-th number module (%) 200907.
样例输入：
2
1 2 3 5
1 2 4 5
样例输出：
5
16






#include <cstdio>
#define N 200907

long long Geometric_Progression(int k,long long q){			//等比数列,k表示要求的第几位，q表示等比数列每一次需要乘的数
	long long ans = 1;		//保存最终结果
	k--;
	while(k){
		if(k%2==1){
			ans *= q;
			ans %= N;
		}
		k /= 2;
		q *= q;
		q %= N;
	}
	return ans;
}

long long buf[10];

int main(){
	int n;
	while(~scanf("%d",&n)){
		while(n--){
			int k;
			for(int i=0; i<3; i++)
				scanf("%lld",&buf[i]);
			scanf("%d",&k);
			if(buf[1]-buf[0] == buf[2]-buf[1]){			//若是等差数列 Algorithm_Progression
				long long d = buf[1]-buf[0];
				printf("%lld\n",(buf[0]%N)+(((k-1)%N)*(d%N))%N);
			}
			else if(buf[1]/buf[0] == buf[2]/buf[1]){	//若为等比数列 Geometrc_Progression
				long long q = (buf[1]/buf[0])%N;
				printf("%lld\n",((buf[0]%N)*(Geometric_Progression(k,q)%N))%N);
			}
		}
	}
	return 0;
}
